{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPiIwFe9gQbyDqXHVttE4mz"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"q2FqzjBpKags"},"outputs":[],"source":["# 라이브러리 호출\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","import numpy as np\n","\n","#1. 데이터 구성\n","x = np.array([1,2,3,4,5,6])\n","y = np.array([1,2,3,4,5,6])\n","\n","#[실습] 레이어의 깊이와 노드의 갯수를 이용해서 최소의 loss를 만들기\n","# 에포는 100으로 고정\n","# 소수 넷째자리까지 0.33이하"]},{"cell_type":"code","source":["#2. 모델구성 # 딥러닝으로 구현\n","model = Sequential()\n","model.add(Dense(2000,input_dim=1)) # Dense(1(output_node), input_dim=1(input_node))\n","model.add(Dense(1000))             # 히든레이어의 모양을 어떻게 만드는것은 전혀 상관없지만\n","model.add(Dense(500))              # in-out은 숫자를 맞출것\n","model.add(Dense(400))\n","model.add(Dense(300))\n","model.add(Dense(200))\n","model.add(Dense(100))\n","model.add(Dense(1))"],"metadata":{"id":"hClFjs5JLFhA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#3. 컴파일 및 훈련\n","epochs = 100\n","model.compile(loss='mse', optimizer='adam')\n","model.fit(x, y, epochs=epochs)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tbar_NniL7b8","executionInfo":{"status":"ok","timestamp":1720691498919,"user_tz":-540,"elapsed":12766,"user":{"displayName":"김태운","userId":"09728503953998186934"}},"outputId":"97a3a40b-05ac-49ab-fc6e-4ba178659941"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","1/1 [==============================] - 2s 2s/step - loss: 12.7148\n","Epoch 2/100\n","1/1 [==============================] - 0s 82ms/step - loss: 288.9391\n","Epoch 3/100\n","1/1 [==============================] - 0s 63ms/step - loss: 32.6087\n","Epoch 4/100\n","1/1 [==============================] - 0s 67ms/step - loss: 38.1735\n","Epoch 5/100\n","1/1 [==============================] - 0s 53ms/step - loss: 1.8122\n","Epoch 6/100\n","1/1 [==============================] - 0s 71ms/step - loss: 11.3719\n","Epoch 7/100\n","1/1 [==============================] - 0s 45ms/step - loss: 8.2449\n","Epoch 8/100\n","1/1 [==============================] - 0s 49ms/step - loss: 1.1410\n","Epoch 9/100\n","1/1 [==============================] - 0s 53ms/step - loss: 17.1564\n","Epoch 10/100\n","1/1 [==============================] - 0s 49ms/step - loss: 12.5177\n","Epoch 11/100\n","1/1 [==============================] - 0s 48ms/step - loss: 0.5571\n","Epoch 12/100\n","1/1 [==============================] - 0s 50ms/step - loss: 4.9946\n","Epoch 13/100\n","1/1 [==============================] - 0s 55ms/step - loss: 9.6232\n","Epoch 14/100\n","1/1 [==============================] - 0s 77ms/step - loss: 2.7821\n","Epoch 15/100\n","1/1 [==============================] - 0s 70ms/step - loss: 0.1206\n","Epoch 16/100\n","1/1 [==============================] - 0s 61ms/step - loss: 3.1980\n","Epoch 17/100\n","1/1 [==============================] - 0s 68ms/step - loss: 5.4656\n","Epoch 18/100\n","1/1 [==============================] - 0s 52ms/step - loss: 4.3164\n","Epoch 19/100\n","1/1 [==============================] - 0s 48ms/step - loss: 1.5602\n","Epoch 20/100\n","1/1 [==============================] - 0s 51ms/step - loss: 0.0211\n","Epoch 21/100\n","1/1 [==============================] - 0s 60ms/step - loss: 0.9300\n","Epoch 22/100\n","1/1 [==============================] - 0s 57ms/step - loss: 2.4524\n","Epoch 23/100\n","1/1 [==============================] - 0s 52ms/step - loss: 2.0382\n","Epoch 24/100\n","1/1 [==============================] - 0s 52ms/step - loss: 0.5699\n","Epoch 25/100\n","1/1 [==============================] - 0s 51ms/step - loss: 0.0144\n","Epoch 26/100\n","1/1 [==============================] - 0s 55ms/step - loss: 0.5150\n","Epoch 27/100\n","1/1 [==============================] - 0s 49ms/step - loss: 1.2171\n","Epoch 28/100\n","1/1 [==============================] - 0s 52ms/step - loss: 1.4711\n","Epoch 29/100\n","1/1 [==============================] - 0s 60ms/step - loss: 1.1493\n","Epoch 30/100\n","1/1 [==============================] - 0s 57ms/step - loss: 0.5326\n","Epoch 31/100\n","1/1 [==============================] - 0s 72ms/step - loss: 0.0727\n","Epoch 32/100\n","1/1 [==============================] - 0s 66ms/step - loss: 0.0873\n","Epoch 33/100\n","1/1 [==============================] - 0s 67ms/step - loss: 0.4675\n","Epoch 34/100\n","1/1 [==============================] - 0s 58ms/step - loss: 0.7245\n","Epoch 35/100\n","1/1 [==============================] - 0s 47ms/step - loss: 0.5585\n","Epoch 36/100\n","1/1 [==============================] - 0s 54ms/step - loss: 0.2020\n","Epoch 37/100\n","1/1 [==============================] - 0s 61ms/step - loss: 0.0197\n","Epoch 38/100\n","1/1 [==============================] - 0s 49ms/step - loss: 0.0946\n","Epoch 39/100\n","1/1 [==============================] - 0s 67ms/step - loss: 0.2733\n","Epoch 40/100\n","1/1 [==============================] - 0s 50ms/step - loss: 0.3814\n","Epoch 41/100\n","1/1 [==============================] - 0s 59ms/step - loss: 0.3446\n","Epoch 42/100\n","1/1 [==============================] - 0s 51ms/step - loss: 0.2023\n","Epoch 43/100\n","1/1 [==============================] - 0s 51ms/step - loss: 0.0609\n","Epoch 44/100\n","1/1 [==============================] - 0s 56ms/step - loss: 0.0183\n","Epoch 45/100\n","1/1 [==============================] - 0s 46ms/step - loss: 0.0873\n","Epoch 46/100\n","1/1 [==============================] - 0s 64ms/step - loss: 0.1811\n","Epoch 47/100\n","1/1 [==============================] - 0s 88ms/step - loss: 0.1978\n","Epoch 48/100\n","1/1 [==============================] - 0s 77ms/step - loss: 0.1263\n","Epoch 49/100\n","1/1 [==============================] - 0s 82ms/step - loss: 0.0428\n","Epoch 50/100\n","1/1 [==============================] - 0s 66ms/step - loss: 0.0162\n","Epoch 51/100\n","1/1 [==============================] - 0s 71ms/step - loss: 0.0488\n","Epoch 52/100\n","1/1 [==============================] - 0s 74ms/step - loss: 0.0955\n","Epoch 53/100\n","1/1 [==============================] - 0s 69ms/step - loss: 0.1126\n","Epoch 54/100\n","1/1 [==============================] - 0s 64ms/step - loss: 0.0886\n","Epoch 55/100\n","1/1 [==============================] - 0s 84ms/step - loss: 0.0451\n","Epoch 56/100\n","1/1 [==============================] - 0s 60ms/step - loss: 0.0164\n","Epoch 57/100\n","1/1 [==============================] - 0s 58ms/step - loss: 0.0211\n","Epoch 58/100\n","1/1 [==============================] - 0s 84ms/step - loss: 0.0472\n","Epoch 59/100\n","1/1 [==============================] - 0s 70ms/step - loss: 0.0646\n","Epoch 60/100\n","1/1 [==============================] - 0s 80ms/step - loss: 0.0559\n","Epoch 61/100\n","1/1 [==============================] - 0s 73ms/step - loss: 0.0315\n","Epoch 62/100\n","1/1 [==============================] - 0s 58ms/step - loss: 0.0143\n","Epoch 63/100\n","1/1 [==============================] - 0s 59ms/step - loss: 0.0161\n","Epoch 64/100\n","1/1 [==============================] - 0s 54ms/step - loss: 0.0295\n","Epoch 65/100\n","1/1 [==============================] - 0s 54ms/step - loss: 0.0391\n","Epoch 66/100\n","1/1 [==============================] - 0s 54ms/step - loss: 0.0360\n","Epoch 67/100\n","1/1 [==============================] - 0s 60ms/step - loss: 0.0238\n","Epoch 68/100\n","1/1 [==============================] - 0s 57ms/step - loss: 0.0133\n","Epoch 69/100\n","1/1 [==============================] - 0s 99ms/step - loss: 0.0123\n","Epoch 70/100\n","1/1 [==============================] - 0s 88ms/step - loss: 0.0192\n","Epoch 71/100\n","1/1 [==============================] - 0s 51ms/step - loss: 0.0252\n","Epoch 72/100\n","1/1 [==============================] - 0s 48ms/step - loss: 0.0237\n","Epoch 73/100\n","1/1 [==============================] - 0s 62ms/step - loss: 0.0166\n","Epoch 74/100\n","1/1 [==============================] - 0s 63ms/step - loss: 0.0109\n","Epoch 75/100\n","1/1 [==============================] - 0s 87ms/step - loss: 0.0108\n","Epoch 76/100\n","1/1 [==============================] - 0s 80ms/step - loss: 0.0147\n","Epoch 77/100\n","1/1 [==============================] - 0s 72ms/step - loss: 0.0175\n","Epoch 78/100\n","1/1 [==============================] - 0s 67ms/step - loss: 0.0163\n","Epoch 79/100\n","1/1 [==============================] - 0s 61ms/step - loss: 0.0123\n","Epoch 80/100\n","1/1 [==============================] - 0s 91ms/step - loss: 0.0093\n","Epoch 81/100\n","1/1 [==============================] - 0s 77ms/step - loss: 0.0094\n","Epoch 82/100\n","1/1 [==============================] - 0s 54ms/step - loss: 0.0116\n","Epoch 83/100\n","1/1 [==============================] - 0s 68ms/step - loss: 0.0129\n","Epoch 84/100\n","1/1 [==============================] - 0s 66ms/step - loss: 0.0117\n","Epoch 85/100\n","1/1 [==============================] - 0s 65ms/step - loss: 0.0093\n","Epoch 86/100\n","1/1 [==============================] - 0s 77ms/step - loss: 0.0079\n","Epoch 87/100\n","1/1 [==============================] - 0s 87ms/step - loss: 0.0084\n","Epoch 88/100\n","1/1 [==============================] - 0s 68ms/step - loss: 0.0096\n","Epoch 89/100\n","1/1 [==============================] - 0s 75ms/step - loss: 0.0099\n","Epoch 90/100\n","1/1 [==============================] - 0s 60ms/step - loss: 0.0088\n","Epoch 91/100\n","1/1 [==============================] - 0s 84ms/step - loss: 0.0075\n","Epoch 92/100\n","1/1 [==============================] - 0s 57ms/step - loss: 0.0069\n","Epoch 93/100\n","1/1 [==============================] - 0s 57ms/step - loss: 0.0074\n","Epoch 94/100\n","1/1 [==============================] - 0s 69ms/step - loss: 0.0079\n","Epoch 95/100\n","1/1 [==============================] - 0s 80ms/step - loss: 0.0077\n","Epoch 96/100\n","1/1 [==============================] - 0s 58ms/step - loss: 0.0069\n","Epoch 97/100\n","1/1 [==============================] - 0s 86ms/step - loss: 0.0062\n","Epoch 98/100\n","1/1 [==============================] - 0s 94ms/step - loss: 0.0062\n","Epoch 99/100\n","1/1 [==============================] - 0s 74ms/step - loss: 0.0065\n","Epoch 100/100\n","1/1 [==============================] - 0s 55ms/step - loss: 0.0066\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x7d5be6e29330>"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["#4. 예측\n","loss=model.evaluate(x, y)\n","result=model.predict(np.array([7]))\n","\n","#5. 출력\n","print(\"epochs:\", epochs)\n","print(\"loss:\", loss)\n","print(\"result:\", result)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NvoVVUSiMZXg","executionInfo":{"status":"ok","timestamp":1720691499374,"user_tz":-540,"elapsed":457,"user":{"displayName":"김태운","userId":"09728503953998186934"}},"outputId":"e2327196-86a5-4154-adc3-b8acbe7d0313"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 159ms/step - loss: 0.0062\n","1/1 [==============================] - 0s 140ms/step\n","epochs: 100\n","loss: 0.006198268383741379\n","result: [[7.0582857]]\n"]}]}]}