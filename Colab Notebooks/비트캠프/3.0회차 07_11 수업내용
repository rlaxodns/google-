{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOuVhOGAl+gLleC7Sr2kDgI"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"h1ybNG_T6ads"},"outputs":[],"source":[]},{"cell_type":"markdown","source":["#모델구성\n","model.add(Dense(1(output), input_dim(차원)=1)\n","--> y=ax+b를 통해 예측\n","\n","1차함수=직선함수\n","데이터를 통해 a,b를 예측\n","\n","a=weight=기울기=가중치\n","b=bias=절편\n","\n","@궁극적 목적은 weight를 찾는것이 중요(loss의 최소화를 하면서)\n","\n","b= 직선함수의 상하 이동\n","\n","weight는 결과 값에 영향을 많이 미치기때문에 중요요인\n","\n","cf)정제되지 않은 데이터를 통해 w,b를 구함의 어려움이 많다\n","따라서, 컴파일의 오차의 인정이 필요\n","\n","ex) epochs=1 ==> 머신이 임의의 선을 1개를 긋는다. (loss값의 증가)\n","\n","epochs값의 증가를 통해 loss값을 줄일 수 있다.\n"," 실무에서는 100%의 정확한 예측이란 없기 때문에 최소한의 loss값을 얻어내는 것이 중요하다\n","\n","cf) loss값은 각 데이터의 loss값의 단순 합을 통해 이루어짐\n","\n","하지만, 과한 훈련은 과적합의 문제를 야기할 수 있음\n","\n","cf) loss = 원값과 예측값의 차이\n","\n","cf) Hyper parameter tunning\n","모델 성능을 최대화하기 위하여 parameter를 튜닝하는 것\n","\n","# Deep Learning\n","인간의 신경계와 유사하게 뉴런의 신경망이 연결되어 있는 것과 유사하게 각각의 노드들을 연결하여 연산함\n","\n","Node=단말/\n","Parameter=연산/\n","Layer=계층/              전체합= Model\n","\n","cf) 가중치 갱신: 아래에서 위로 역으로 진행\n","\n","Input-Layer ==> Hidden-Layer ==> Output-Layer\n","\n","레이어와 노드의 갯수를 조절을 통해서 결과값과 오류값을 조절할 수 있음\n","\n","\n"],"metadata":{"id":"ky6vz9uM6xMX"}},{"cell_type":"code","source":["#ex) input_dim=1 에서 맨 처음의 input_dim을 제외한 하단의 레이어에서의 명령어를 삭제 가능"],"metadata":{"id":"mE5DasHj--HO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["정규화: 데이터 간의 중복을 최소화 하는 것\n","batch를 통해 데이터를 분해하여서 에포 값을 증가 또는 감소 시킬 수 있음\n","\n","batch 값의 미지정시 기본값은 32로 고정\n","\n","과적합: 학습데이터를 과하게 학습되어 loss값이 갱신되지 않는 것"],"metadata":{"id":"Zxihalqy_RcU"}},{"cell_type":"markdown","source":["#행렬\n","가로=행Row\n","세로=열Column//(행,열)로 표현\n","\n","1 = 스칼라\n","\n","[1,2,3] = 벡터\n","\n","[[1,2,3],[4,5,6]] = 행렬\n","\n","[[[1,2,3],[4,5,6],[7,8,9] = Tensor(다차원행렬)\n","\n","ex)\n","[1,2,3] = (3,0)\n","\n","[[1,2,3]] = (1,3)\n","\n","[[1,2],[3,4]] = (2,2)\n","\n","[[1,2],[3,4],[5,6]] = (3,2)\n","\n","[[[1,2],[3,4],[5,6]]] = (1,3,2)\n","\n","[[[1,2],[3,4]],[[5,6],[7,8]]] = (2,2,2)\n","\n","[[[[1,2,3,4,5],[6,7,8,9,10]]]] = (1,1,2,5)\n","\n","[[1,2,3],[4,5,6]] = (2,3)\n","\n","[[[[1]]],[[[2]]]] = (2,1,1,1)"],"metadata":{"id":"U6hYKs1U_qgU"}}]}